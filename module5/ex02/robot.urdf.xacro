<?xml version="1.0"?>
<robot name="robot" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Define robot constants -->
  <xacro:property name="base_width" value="0.31"/>
  <xacro:property name="base_length" value="0.42"/>
  <xacro:property name="base_height" value="0.15"/>

  <xacro:property name="wheel_radius" value="0.08"/>
  <xacro:property name="wheel_width" value="0.1"/>
  <xacro:property name="wheel_ygap" value="0.025"/>
  <xacro:property name="wheel_zoff" value="0.05"/>
  <xacro:property name="wheel_xoff" value="0.12"/>

  <xacro:property name="caster_xoff" value="0.14"/>
  

   <!-- Define intertial property macros  -->
  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <!-- Robot Base -->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <material name="blue">
        <color rgba="0 0 1.0 1.0"/>
      </material>
    </visual>
    
    <collision>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>

    <xacro:box_inertia m="15" w="${base_width}" d="${base_length}" h="${base_height}"/>
  </link>
  
  <!-- Robot Footprint -->
  <link name="base_footprint"/>

  <joint name="base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_footprint"/>
    <origin xyz="0.0 0.0 ${-(wheel_radius+wheel_zoff)}" rpy="0 0 0"/>
  </joint>
  
  <!-- I AM SPEED start -->
  <!-- T start -->
  <!-- Rectangle on the top of base_link -->
  <link name="head_of_T">
    <visual>
      <geometry>
        <box size="0.1 0.5 0.02"/> <!-- Размеры прямоугольника (высота, ширина, длина) -->
      </geometry>
      <material name="green">  
        <color rgba="0.0 1.0 0 1.0"/>
      </material>
    </visual>

    <collision>
      <geometry>
        <box size="0.1 0.5 0.02"/> <!-- Размеры прямоугольника для коллизий -->
      </geometry>
    </collision>

    <!-- Определение инерции прямоугольника -->
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.1"/> <!-- Масса прямоугольника -->
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/> <!-- Моменты инерции -->
    </inertial>
  </link>

  <!-- Joint to connect top_rectangle_link to base_link -->
  <joint name="head_of_T_joint" type="fixed">
    <parent link="base_link"/>
    <child link="head_of_T"/>
    <origin xyz="-0.05 0.0 ${base_height/2 + 0.01}" rpy="0 0 0"/> <!-- Высота прямоугольника относительно base_link -->
  </joint>

    <!-- Rectangle at a 90 degree -->
  <link name="angled_rectangle_link_1">
    <visual>
      <geometry>
        <box size="0.25 0.1 0.02"/> <!-- Размеры прямоугольника (высота, ширина, длина) -->
      </geometry>
      <material name="green">  
        <color rgba="0 1.0 0 1.0"/>
      </material>
    </visual>

    <collision>
      <geometry>
        <box size="0.25 0.1 0.02"/> <!-- Размеры прямоугольника для коллизий -->
      </geometry>
    </collision>

    <!-- Определение инерции прямоугольника -->
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.1"/> <!-- Масса прямоугольника -->
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/> <!-- Моменты инерции -->
    </inertial>
  </link>

  <!-- Joint to connect angled_rectangle_link_1 to base_link at a 45-degree angle -->
  <joint name="angled_rectangle_joint_1" type="fixed">
    <parent link="base_link"/>
    <child link="angled_rectangle_link_1"/>
    <origin xyz="0.1 0 ${base_height/2 + 0.01}" rpy="0 0 0"/> 
    <axis xyz="1 0 0"/> <!-- Ось вращения вдоль z-оси (вертикальная ось) -->
  </joint>

  
  <!-- T end -->

  <!-- I AM SPEED end-->
   
  <!-- Wheels -->
  <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
    <link name="${prefix}_link">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="Black">
          <color rgba="0 0 0 1.0"/>
        </material>
      </visual>
      
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>

      <xacro:cylinder_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}"/>
    </link>

    <joint name="${prefix}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="${x_reflect*wheel_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_zoff}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>

  <xacro:wheel prefix="drivewhl_l" x_reflect="-1" y_reflect="1" />
  <xacro:wheel prefix="drivewhl_r" x_reflect="-1" y_reflect="-1" />

  <!-- Caster Wheel -->
  <link name="front_caster">
    <visual>
      <geometry>
        <sphere radius="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
      </geometry>
      <material name="Black">
          <color rgba="0 0 0 1.0"/>
        </material>
    </visual>
    
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <sphere radius="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
      </geometry>
    </collision>

    <xacro:sphere_inertia m="0.5" r="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
    
  </link>

  <joint name="caster_joint" type="fixed">
    <parent link="base_link"/>
    <child link="front_caster"/>
    <origin xyz="${caster_xoff} 0.0 ${-(base_height/2)}" rpy="0 0 0"/>
  </joint>

</robot>
